<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.customermanagement.management.mapper.CustomerMapper">

    <select id="getDeptInfoByEmpId" parameterType="String" resultType="DeptInfo">

        select distinct dept_id, dept_name
        from department, employee
        <where>
            emp_dept_id=dept_id
            <if test="emp_id != null">
                and emp_id=#{emp_id};
            </if>
        </where>

    </select>



    <select id="getEmpInfoByEmpIdAndDeptId" parameterType="String" resultType="EmpInfo">

        select distinct emp_id, emp_name
        from employee
        <where>
            emp_position_id in ("30000030","30000010")
            <if test="emp_id!=null">
               and emp_id=#{emp_id}
            </if>
            <if test="dept_id!=null">
                and emp_dept_id=#{dept_id}
            </if>
        </where>

    </select>



    <select id="getCusSearchResult" parameterType="String" resultType="CusSearchResult">

        select distinct cus_id, cus_name, cus_product_type, cus_enterprise_property, cus_sales_dept_id, cus_customer_manager_id
        from customer
        <where>
            <if test="emp_id!=null">
                cus_customer_manager_id=#{emp_id}
            </if>
            <if test="dept_id!=null">
                and cus_sales_dept_id=#{dept_id}
            </if>
        </where>

    </select>



    <select id="getEmpByDept" parameterType="String" resultType="EmpInfo">
        select distinct emp_id, emp_name
        from employee
        where emp_position_id in ("30000030","30000010") and emp_dept_id=#{dept_id}
    </select>



    <select id="getRelationByCusId" parameterType="String" resultType="Relation">

        select cusrel_cus_id, cusrel_cus_related_cus_id, cusrel_relation
        from customer_related
        where cusrel_cus_id=#{cus_id}

    </select>



    <select id="getCusNameByCusId" parameterType="String" resultType="String">
        select cus_name from customer where cus_id=#{cus_id}
    </select>



    <select id="getCustomers" parameterType="CusSearchCondition" resultType="CusSearchResult">

        select cus_id, cus_name, cus_product_type, cus_enterprise_property, cus_sales_dept_id, cus_customer_manager_id
        from customer
        <where>
            <if test="cusId != null">
                cus_id like "%"#{cusId}"%"
            </if>
            <if test="cusName != null">
                and cus_name like "%"#{cusName}"%"
            </if>
            <if test="cusEnterpriseProperty != null">
                and cus_enterprise_property = #{cusEnterpriseProperty}
            </if>
            <if test="cusSalesDeptId != null">
                and cus_sales_dept_id = #{cusSalesDeptId}
            </if>
            <if test="cusCustomerManagerId != null">
                and cus_customer_manager_id = #{cusCustomerManagerId}
            </if>
        </where>

    </select>



    <select id="findMaxCusId" resultType="String">
        SELECT MAX(cus_id) from customer;
    </select>



    <insert id="addCusRelated" parameterType="Relation">
        insert into customer_related (cusrel_cus_id, cusrel_cus_related_cus_id, cusrel_relation)
        values (#{cusrelCusId}, #{cusrelCusRelatedCusId}, #{cusrelRelation});
    </insert>



    <select id="judgeMultiFather1" parameterType="String" resultType="Integer">
        select count(*)
        from customer_related c1, customer_related c2
        where c1.cusrel_cus_related_cus_id = c2.cusrel_cus_id
        and c1.cusrel_cus_id=#{cus_id_son} and c2.cusrel_cus_related_cus_id=#{cus_id_father}
    </select>



    <select id="judgeMultiFather2" parameterType="String" resultType="Integer">
        select count(*) from customer_related
        where (cusrel_cus_id = #{cus_id1} and cusrel_cus_related_cus_id = #{cus_id2})
        or (cusrel_cus_id = #{cus_id2} and cusrel_cus_related_cus_id = #{cus_id1})
    </select>



    <select id="judgeTaxId" parameterType="String" resultType="Integer">
        select count(*) from customer where cus_taxpayer_id=#{tax_id}
    </select>



    <delete id="deleteRelByIds" parameterType="String">
        delete from customer_related where cusrel_cus_id=#{id1} and cusrel_cus_related_cus_id=#{id2}
    </delete>



    <delete id="deleteConByNameAndId" parameterType="String">
        delete from contact where con_customer_id=#{cus_id} and con_name=#{con_name}
    </delete>



    <update id="frozenCustomer" parameterType="String">
        update customer
        <set>
            <if test="cus_status == '10'">cus_status = '20',</if>
            <if test="cus_status == '20'">cus_status = '10'</if>
        </set>
        where cus_id = #{cus_id}
    </update>







</mapper>
